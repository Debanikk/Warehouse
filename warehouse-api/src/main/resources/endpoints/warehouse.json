{
  "swagger": "2.0",
  "info": {
    "title": "warehouse API",
    "version": "1.0.0",
    "description": "API of warehouse Services"
  },
  "host": "warehouse.io",
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "API#005 Warehouse",
      "description": "All operations marked with 'API#005 Warehouse' are relevant to the warehouse use case"
    }
  ],
  "securityDefinitions": {
    "BearerAuthorization": {
      "type": "basic",
      "description": "Bearer authentication (also called token authentication) is an HTTP authentication scheme that involves security tokens called bearer tokens. The name “Bearer authentication” can be understood as “give access to the bearer of this token.”\nThe bearer token is a cryptic string, usually generated by the server in response to a login request. The client must send this token in the Authorization header when making requests to protected resources:\n``` Authorization: Bearer <token>\n```\nSimilarly to Basic authentication, Bearer authentication should only be used over HTTPS (SSL).\nRead https://jwt.io/introduction/ for more information on JWT standard.\n"
    }
  },
  "paths": {
    "/product/{productId}/warehouse/create": {
      "x-swagger-router-controller": "api",
      "post": {
        "tags": [
          "API#005 Create warehouseCapacity"
        ],
        "security": [
          {
            "BearerAuthorization": [
            ]
          }
        ],
        "operationId": "createWarehouseCapacity",
        "summary": "createWarehouseCapacity",
        "description": "User can create a warehouse capacity by adding a capacity to the product selected.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "$ref": "#/parameters/productId"
          },
          {
            "in": "body",
            "name": "WarehouseRequest",
            "description": "Request containing warehouse information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WarehouseRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED - Warehouse capacity created successfully",
            "schema": {
              "$ref": "#/definitions/WarehouseResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/warehouse/edit/{warehouseId}": {
      "x-swagger-router-controller": "api",
      "put": {
        "tags": [
          "API#005 Edit an warehouse"
        ],
        "security": [
          {
            "BearerAuthorization": [
            ]
          }
        ],
        "operationId": "editWarehouseContent",
        "summary": "editWarehouseContent",
        "description": "User can edit the warehouse if he has created the product.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "$ref": "#/parameters/warehouseId"
          },
          {
            "in": "body",
            "name": "WarehouseEditRequest",
            "description": "Request containing warehouse capacity edit information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WarehouseEditRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Warehouse changed successfully",
            "schema": {
              "$ref": "#/definitions/WarehouseEditResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/warehouse/delete/{warehouseId}": {
      "x-swagger-router-controller": "api",
      "delete": {
        "tags": [
          "API#004 Delete an warehouse entry"
        ],
        "security": [
          {
            "BearerAuthorization": [
            ]
          }
        ],
        "operationId": "deleteWarehouse",
        "summary": "deleteWarehouse",
        "description": "Admin or user can delete the warehouse entry if he has added the warehouse entry.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "$ref": "#/parameters/warehouseId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - warehouse entry deleted successfully",
            "schema": {
              "$ref": "#/definitions/WarehouseDeleteResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/warehouse/all/{productId}": {
      "x-swagger-router-controller": "api",
      "get": {
        "tags": [
          "API#004 Get the sum of all capacity entered for a specific Product"
        ],
        "security": [
          {
            "BearerAuthorization": [
            ]
          }
        ],
        "operationId": "getAllWarehouseEntryToProduct",
        "summary": "getAllWarehouseEntryToProduct",
        "description": "User can get the details of all the entries in warehouse for a specific product.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "$ref": "#/parameters/productId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Fetched the warehouse entries successfully",
            "schema": {
              "$ref": "#/definitions/WarehouseDetailsResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "productId": {
      "name": "productId",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Unique identifier of Product in a standard UUID format"
    },
    "warehouseId": {
      "name": "warehouseId",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Unique identifier of Warehouse entry in a standard UUID format"
    },
    "BearerAuthorization": {
      "name": "authorization",
      "type": "string",
      "in": "header",
      "required": true,
      "description": "Mandatory user credentials in bearer http authentication scheme format."
    }
  },
  "definitions": {
    "WarehouseRequest": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "string",
          "description": "warehouse entry to the product"
        }
      },
      "required": [
        "warehouse"
      ]
    },
    "WarehouseResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "uuid of the warehouse entry"
        },
        "status": {
          "type": "string",
          "description": "status of the warehouse entry entered"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "WarehouseEditRequest": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "string",
          "description": "updated content of the warehouse entry"
        }
      }
    },
    "WarehouseEditResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "warehouse entry uuid"
        },
        "status": {
          "type": "string",
          "description": "status of the updated warehouse"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "WarehouseDeleteResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "warehouse uuid"
        },
        "status": {
          "type": "string",
          "description": "status of the deleted warehouse entry"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "WarehouseDetailsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "warehouse uuid"
        },
        "ProductName": {
          "type": "string",
          "description": "name of the product"
        },
        "WarehouseCapacity": {
          "type": "string",
          "description": "Warehouse capacity"
        }
      },
      "required": [
        "id",
        "ProductName",
        "WarehouseCapacity"
      ]
    }
  }
}